<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:annotation-config />
	<!--<context:spring-configured/> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/adms/" />

	<!-- Enables the Spring MVC Annotation programming model Scan -->
	<context:component-scan base-package="com.dell.coe.upload" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Multipart form data -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1000000000" />
	</beans:bean>

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:message" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	<context:property-placeholder location="classpath:persistence-mysql.properties" />




	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://160.110.220.161:3306/smart_estimation" />
		<beans:property name="username" value="webapp" />
		<beans:property name="password" value="webapp" />
	</beans:bean>

	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> <beans:property 
		name="url" value="jdbc:mysql://localhost:3306/smart_estimation" /> <beans:property 
		name="username" value="root" /> <beans:property name="password" value="root"/> 
		</beans:bean> -->

	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> <beans:property 
		name="url" value="jdbc:mysql://localhost:3306/smart_estm" /> <beans:property 
		name="username" value="root" /> <beans:property name="password" value="root"/> 
		</beans:bean> -->

	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> <beans:property 
		name="url" value="jdbc:mysql://localhost:3306/estimation" /> <beans:property 
		name="username" value="root" /> <beans:property name="password" value="root"/> 
		</beans:bean> -->

	<!-- Hibernate 4 Annotation SessionFactory Bean definition -->
	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="persistenceUnitName" value="persistenceUnit" />
		<!-- annotated source files <beans:property name="annotatedClasses"> <beans:list> 
			<beans:value>com.journaldev.model.Person</beans:value> </beans:list> </beans:property> -->

		<!-- annotated source files <beans:property name="annotatedPackages"> <beans:list> 
			<beans:value>com.company.persistence.model.package1</beans:value> <beans:value>com.company.persistence.model.package2</beans:value> 
			</beans:list> </beans:property> -->

		<!-- annotated source files <beans:property name="automaticAnnotatedPackages"> 
			<beans:list> <beans:value>com.package.domain</beans:value> <beans:value>com.package.domain.view</beans:value> 
			</beans:list> </beans:property> -->

		<!-- annotated source files -->
		<beans:property name="packagesToScan">
			<beans:list>
				<beans:value>com.dell.coe.upload.persistence</beans:value>
			</beans:list>
		</beans:property>

		<!-- <beans:property name="hibernateProperties"> <beans:props> <beans:prop 
			key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop> 
			<beans:prop key="hibernate.show_sql">true</beans:prop> <beans:prop key="hibernate.format_sql">true</beans:prop> 
			<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop> <beans:prop 
			key="hibernate.max_fetch_depth">${db.max_fetch_depth}</beans:prop> <beans:prop 
			key="hibernate.jdbc.fetch_size">${db.jdbc.fetch_size}</beans:prop> <beans:prop 
			key="hibernate.jdbc.batch_size">${db.jdbc.batch_size}</beans:prop> <beans:prop 
			key="hibernate.transaction.manager_lookup_class">${db.transaction.manager_lookup_class}</beans:prop> 
			<beans:prop key="hibernate.generate_statistics">${db.generate_statistics}</beans:prop> 
			<beans:prop key="hibernate.cache.provider_class">${db.cache.provider_class}</beans:prop> 
			<beans:prop key="hibernate.current_session_context_class">${db.current_session_context_class} 
			</beans:prop> <beans:prop key="hibernate.validator.apply_to_ddl">${db.validator.apply_to_ddl}</beans:prop> 
			<beans:prop key="hibernate.validator.autoregister_listeners">${db.validator.autoregister_listeners} 
			</beans:prop> <beans:prop key="hibernate.cache.use_query_cache">${db.cache.use_query_cache}</beans:prop> 
			</beans:props> </beans:property> -->
	</beans:bean>



	<!-- Transaction Manager -->
	<beans:bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>

	<!-- Enable @Transactional annotation -->
	<tx:annotation-driven />


	<!-- <beans:import resource="classpath:hibernate-configuration.xml"></beans:import> -->
	<!-- <beans:import resource="classpath:aspect-configuration.xml"></beans:import> -->
	<!-- <beans:import resource="classpath:schedule-configuration.xml"></beans:import> -->

</beans:beans>
