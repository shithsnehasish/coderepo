/**
 * Generated by Dell Virtuoso
 * All rights reserved.
 */
package com.dell.coe.pts.technicalservice.business;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dell.coe.pts.persistence.TechnologyCategory;
import com.dell.coe.pts.persistence.TechnologyStack;
import com.dell.coe.pts.persistence.dao.TechnologyStackDao;
import com.dell.coe.pts.util.ConversionUtil;
import com.dell.coe.pts.vo.TechCategoryReportVO;
import com.dell.coe.pts.vo.TechnologyStackVO;

/**
 * The documentation of the class TechnologyStackTechnicalBLImpl.
 *
 * @author 
 * @generated 
 */
@Service
public class TechnologyStackTechnicalBLImpl implements TechnologyStackTechnicalBL {

    /** The technology stack dao. */
    @Autowired
    private TechnologyStackDao technologyStackDao;

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyStackTechnicalBL#createTechnologyStack(com.dell.coe.pts.vo.TechnologyStackVO)
     */
    @Override
    public TechnologyStackVO createTechnologyStack(TechnologyStackVO technologyStackVO) {
        TechnologyStack technologyStackObj = ConversionUtil.convertFromTechnologyStackVo(technologyStackVO);
        TechnologyStack technologyStackOutputObj = technologyStackDao.save(technologyStackObj);
        return ConversionUtil.convertToTechnologyStackVo(technologyStackOutputObj, true, true);

    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyStackTechnicalBL#updateTechnologyStack(com.dell.coe.pts.vo.TechnologyStackVO)
     */
    @Override
    public TechnologyStackVO updateTechnologyStack(TechnologyStackVO technologyStackVO) {
        TechnologyStack technologyStackObj = ConversionUtil.convertFromTechnologyStackVo(technologyStackVO);
        TechnologyStack technologyStackOutputObj = technologyStackDao.update(technologyStackObj);
        return ConversionUtil.convertToTechnologyStackVo(technologyStackOutputObj, true, true);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyStackTechnicalBL#getTechnologyStackById(java.lang.Integer)
     */
    @Override
    public TechnologyStackVO getTechnologyStackById(Integer id) {

        TechnologyStack technologyStackOutputObj = technologyStackDao.findById(id);
        return ConversionUtil.convertToTechnologyStackVo(technologyStackOutputObj, true, true);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyStackTechnicalBL#getAllTechnologyStack()
     */
    @Override
    public List<TechnologyStackVO> getAllTechnologyStack() {

        List<TechnologyStack> technologyStackOutputObjList = technologyStackDao.listAll();
        return ConversionUtil.convertListToTechnologyStackVOList(technologyStackOutputObjList, true, true);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyStackTechnicalBL#removeTechnologyStack(com.dell.coe.pts.vo.TechnologyStackVO)
     */
    @Override
    public void removeTechnologyStack(TechnologyStackVO technologyStackVO) {
        TechnologyStack technologyStackObj = ConversionUtil.convertFromTechnologyStackVo(technologyStackVO);
        technologyStackDao.delete(technologyStackObj);
    }

    /**
     * Gets the technology stack dao.
     *
     * @return the technology stack dao
     */
    public TechnologyStackDao getTechnologyStackDao() {
        return technologyStackDao;
    }

    /**
     * Sets the technology stack dao.
     *
     * @param technologyStackDao the new technology stack dao
     */
    public void setTechnologyStackDao(TechnologyStackDao technologyStackDao) {
        this.technologyStackDao = technologyStackDao;
    }

    @Override
    public List<TechCategoryReportVO> getAllTechnologyStackGroupedByTechnologyCategory() {

        Map<TechnologyCategory, List<TechnologyStackVO>> categoryWiseTechnologies = new TreeMap<TechnologyCategory, List<TechnologyStackVO>>();
        List<TechnologyStack> technologyStackList = technologyStackDao.getAllTechnologyStack();

        for (TechnologyStack technologyStack : technologyStackList) {
            TechnologyCategory key = technologyStack.getTechnologycategory();
            if (categoryWiseTechnologies.containsKey(key)) {
                List<TechnologyStackVO> list = categoryWiseTechnologies.get(key);
                list.add(ConversionUtil.convertToTechnologyStackVo(technologyStack, false, false));
            } else {
                List<TechnologyStackVO> list = new ArrayList<TechnologyStackVO>();
                list.add(ConversionUtil.convertToTechnologyStackVo(technologyStack, false, false));
                categoryWiseTechnologies.put(key, list);
            }

        }
        List<TechCategoryReportVO> categoryReportVOs = new ArrayList<TechCategoryReportVO>();
        for (Map.Entry<TechnologyCategory, List<TechnologyStackVO>> entry : categoryWiseTechnologies.entrySet()) {
            TechCategoryReportVO techCategoryReportVO = new TechCategoryReportVO();
            techCategoryReportVO.setTechnologyCategoryVO(ConversionUtil.convertToTechnologyCategoryVO(entry.getKey()));
            techCategoryReportVO.setTechStackVOList(entry.getValue());
            categoryReportVOs.add(techCategoryReportVO);
        }

        return categoryReportVOs;
    }

}
