/**
 * Generated by Dell Virtuoso
 * All rights reserved.
 */
package com.dell.coe.pts.technicalservice.business;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.*;

import com.dell.coe.pts.technicalservice.business.ProjectTechnicalBL;
import com.dell.coe.pts.util.ConversionUtil;
import com.dell.coe.pts.vo.ProjectVO;
import com.dell.coe.pts.persistence.dao.ProjectDao;
import com.dell.coe.pts.persistence.Project;

/**
 * The documentation of the class ProjectTechnicalBLImpl.
 *
 * @author 
 * @generated 
 */
@Service
public class ProjectTechnicalBLImpl implements ProjectTechnicalBL {

    /** The project dao. */
    @Autowired
    private ProjectDao projectDao;

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.ProjectTechnicalBL#createProject(com.dell.coe.pts.vo.ProjectVO)
     */
    @Override
    public ProjectVO createProject(ProjectVO projectVO) {
        Project projectObj = ConversionUtil.convertFromProjectVO(projectVO);
        Project projectOutputObj = projectDao.save(projectObj);
        return ConversionUtil.convertToProjectVO(projectOutputObj, true);

    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.ProjectTechnicalBL#updateProject(com.dell.coe.pts.vo.ProjectVO)
     */
    @Override
    public ProjectVO updateProject(ProjectVO projectVO) {
        Project projectObj = ConversionUtil.convertFromProjectVO(projectVO);
        Project projectOutputObj = projectDao.update(projectObj);
        return ConversionUtil.convertToProjectVO(projectOutputObj, true);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.ProjectTechnicalBL#getProjectById(java.lang.Integer)
     */
    @Override
    public ProjectVO getProjectById(Integer id) {

        Project projectOutputObj = projectDao.findById(id);
        return ConversionUtil.convertToProjectVO(projectOutputObj, true);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.ProjectTechnicalBL#getAllProject()
     */
    @Override
    public List<ProjectVO> getAllProject() {

        List<Project> projectOutputObjList = projectDao.listAll();
        return ConversionUtil.convertListToProjectVOList(projectOutputObjList, true);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.ProjectTechnicalBL#removeProject(com.dell.coe.pts.vo.ProjectVO)
     */
    @Override
    public void removeProject(ProjectVO projectVO) {
        Project projectObj = ConversionUtil.convertFromProjectVO(projectVO);
        projectDao.delete(projectObj);
    }

    /**
     * Gets the project dao.
     *
     * @return the project dao
     */
    public ProjectDao getProjectDao() {
        return projectDao;
    }

    /**
     * Sets the project dao.
     *
     * @param projectDao the new project dao
     */
    public void setProjectDao(ProjectDao projectDao) {
        this.projectDao = projectDao;
    }

}
