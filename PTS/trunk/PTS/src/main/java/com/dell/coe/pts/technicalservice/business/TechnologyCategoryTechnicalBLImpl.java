/**
 * Generated by Dell Virtuoso
 * All rights reserved.
 */
package com.dell.coe.pts.technicalservice.business;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dell.coe.pts.persistence.TechnologyCategory;
import com.dell.coe.pts.persistence.dao.TechnologyCategoryDao;
import com.dell.coe.pts.util.ConversionUtil;
import com.dell.coe.pts.vo.TechnologyCategoryVO;

/**
 * The documentation of the class TechnologyCategoryTechnicalBLImpl.
 *
 * @author 
 * @generated 
 */
@Service
public class TechnologyCategoryTechnicalBLImpl implements TechnologyCategoryTechnicalBL {

    /** The technology category dao. */
    @Autowired
    private TechnologyCategoryDao technologyCategoryDao;

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyCategoryTechnicalBL#createTechnologyCategory(com.dell.coe.pts.vo.TechnologyCategoryVO)
     */
    @Override
    public TechnologyCategoryVO createTechnologyCategory(TechnologyCategoryVO technologyCategoryVO) {
        TechnologyCategory technologyCategoryObj = ConversionUtil.convertFromTechnologyCategoryVO(technologyCategoryVO);
        TechnologyCategory technologyCategoryOutputObj = technologyCategoryDao.save(technologyCategoryObj);
        return ConversionUtil.convertToTechnologyCategoryVO(technologyCategoryOutputObj);

    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyCategoryTechnicalBL#updateTechnologyCategory(com.dell.coe.pts.vo.TechnologyCategoryVO)
     */
    @Override
    public TechnologyCategoryVO updateTechnologyCategory(TechnologyCategoryVO technologyCategoryVO) {
        TechnologyCategory technologyCategoryObj = ConversionUtil.convertFromTechnologyCategoryVO(technologyCategoryVO);
        TechnologyCategory technologyCategoryOutputObj = technologyCategoryDao.update(technologyCategoryObj);
        return ConversionUtil.convertToTechnologyCategoryVO(technologyCategoryOutputObj);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyCategoryTechnicalBL#getTechnologyCategoryById(java.lang.Integer)
     */
    @Override
    public TechnologyCategoryVO getTechnologyCategoryById(Integer id) {

        TechnologyCategory technologyCategoryOutputObj = technologyCategoryDao.findById(id);
        return ConversionUtil.convertToTechnologyCategoryVO(technologyCategoryOutputObj);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyCategoryTechnicalBL#getAllTechnologyCategory()
     */
    @Override
    public List<TechnologyCategoryVO> getAllTechnologyCategory() {

        List<TechnologyCategory> technologyCategoryOutputObjList = technologyCategoryDao.listAll();
        return ConversionUtil.convertListToTechnologyCategoryVOList(technologyCategoryOutputObjList);
    }

    /* (non-Javadoc)
     * @see com.dell.coe.pts.technicalservice.business.TechnologyCategoryTechnicalBL#removeTechnologyCategory(com.dell.coe.pts.vo.TechnologyCategoryVO)
     */
    @Override
    public void removeTechnologyCategory(TechnologyCategoryVO technologyCategoryVO) {
        TechnologyCategory technologyCategoryObj = ConversionUtil.convertFromTechnologyCategoryVO(technologyCategoryVO);
        technologyCategoryDao.delete(technologyCategoryObj);
    }

    /**
     * Gets the technology category dao.
     *
     * @return the technology category dao
     */
    public TechnologyCategoryDao getTechnologyCategoryDao() {
        return technologyCategoryDao;
    }

    /**
     * Sets the technology category dao.
     *
     * @param technologyCategoryDao the new technology category dao
     */
    public void setTechnologyCategoryDao(TechnologyCategoryDao technologyCategoryDao) {
        this.technologyCategoryDao = technologyCategoryDao;
    }

}
